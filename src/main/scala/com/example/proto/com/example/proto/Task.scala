// Generated by ScalaBuff, the Scala Protocol Buffers compiler. DO NOT EDIT!
// source: task.proto

package com.example.proto

final case class TaskProto (
	`id`: Option[Int] = None,
	`text`: String = "",
	`complete`: Boolean = false
) extends com.google.protobuf.GeneratedMessageLite
	with com.google.protobuf.MessageLite.Builder
	with net.sandrogrzicic.scalabuff.Message[TaskProto]
	with net.sandrogrzicic.scalabuff.Parser[TaskProto] {

	def setId(_f: Int) = copy(`id` = Some(_f))

	def clearId = copy(`id` = None)

	def writeTo(output: com.google.protobuf.CodedOutputStream) {
		if (`id`.isDefined) output.writeInt32(1, `id`.get)
		output.writeString(2, `text`)
		output.writeBool(3, `complete`)
	}

	def getSerializedSize = {
		import com.google.protobuf.CodedOutputStream._
		var __size = 0
		if (`id`.isDefined) __size += computeInt32Size(1, `id`.get)
		__size += computeStringSize(2, `text`)
		__size += computeBoolSize(3, `complete`)

		__size
	}

	def mergeFrom(in: com.google.protobuf.CodedInputStream, extensionRegistry: com.google.protobuf.ExtensionRegistryLite): TaskProto = {
		import com.google.protobuf.ExtensionRegistryLite.{getEmptyRegistry => _emptyRegistry}
		var __id: Option[Int] = `id`
		var __text: String = ""
		var __complete: Boolean = false

		def __newMerged = TaskProto(
			__id,
			__text,
			__complete
		)
		while (true) in.readTag match {
			case 0 => return __newMerged
			case 8 => __id = Some(in.readInt32())
			case 18 => __text = in.readString()
			case 24 => __complete = in.readBool()
			case default => if (!in.skipField(default)) return __newMerged
		}
		null
	}

	def mergeFrom(m: TaskProto) = {
		TaskProto(
			m.`id`.orElse(`id`),
			m.`text`,
			m.`complete`
		)
	}

	def getDefaultInstanceForType = TaskProto.defaultInstance
	def clear = getDefaultInstanceForType
	def isInitialized = true
	def build = this
	def buildPartial = this
	def parsePartialFrom(cis: com.google.protobuf.CodedInputStream, er: com.google.protobuf.ExtensionRegistryLite) = mergeFrom(cis, er)
	override def getParserForType = this
	def newBuilderForType = getDefaultInstanceForType
	def toBuilder = this
	def toJson(indent: Int = 0): String = "ScalaBuff JSON generation not enabled. Use --generate_json_method to enable."
}

object TaskProto {
	@scala.beans.BeanProperty val defaultInstance = new TaskProto()

	def parseFrom(data: Array[Byte]): TaskProto = defaultInstance.mergeFrom(data)
	def parseFrom(data: Array[Byte], offset: Int, length: Int): TaskProto = defaultInstance.mergeFrom(data, offset, length)
	def parseFrom(byteString: com.google.protobuf.ByteString): TaskProto = defaultInstance.mergeFrom(byteString)
	def parseFrom(stream: java.io.InputStream): TaskProto = defaultInstance.mergeFrom(stream)
	def parseDelimitedFrom(stream: java.io.InputStream): Option[TaskProto] = defaultInstance.mergeDelimitedFromStream(stream)

	val ID_FIELD_NUMBER = 1
	val TEXT_FIELD_NUMBER = 2
	val COMPLETE_FIELD_NUMBER = 3

	def newBuilder = defaultInstance.newBuilderForType
	def newBuilder(prototype: TaskProto) = defaultInstance.mergeFrom(prototype)

}

object Task {
	def registerAllExtensions(registry: com.google.protobuf.ExtensionRegistryLite) {
	}

	private val fromBinaryHintMap = collection.immutable.HashMap[String, Array[Byte] ⇒ com.google.protobuf.GeneratedMessageLite](
		 "TaskProto" -> (bytes ⇒ TaskProto.parseFrom(bytes))
	)

	def deserializePayload(payload: Array[Byte], payloadType: String): com.google.protobuf.GeneratedMessageLite = {
		fromBinaryHintMap.get(payloadType) match {
			case Some(f) ⇒ f(payload)
			case None    ⇒ throw new IllegalArgumentException(s"unimplemented deserialization of message payload of type [${payloadType}]")
		}
	}
}
